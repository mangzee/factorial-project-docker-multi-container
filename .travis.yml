sudo: required

# Tell Travis we need docker
services:
    - docker

# Tell Travis to build the image using Dockerfile.dev
# We are only testing react app as only it has testcases
before_install:
    - docker build -t mangzee/react-test -f ./react-client/Dockerfile.dev ./react-client

# Tell Travis how to run test suite 
script:
    - docker run -e CI=true mangzee/react-test npm run test

# Tell Travis to build production images
after_success:
    - docker build -t mangzee/factorial-project-react-client ./react-client
    - docker build -t mangzee/factorial-project-nginx ./nginx
    - docker build -t mangzee/factorial-project-express-server ./express-server
    - docker build -t mangzee/factorial-project-worker ./worker
    # Login to docker CLI
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
    # Push images to docker hub
    - docker push mangzee/factorial-project-nginx
    - docker push mangzee/factorial-project-express-server
    - docker push mangzee/factorial-project-worker
    - docker push mangzee/factorial-project-react-client

# Tell Travis how to deploy code to AWS
deploy:
    provider: elasticbeanstalk # We will deploy code to Elastic Beanstalk
    region: ap-south-1 # Specify your region
    app: "factorial-project-docker-multi-container" # Copy it from Elastic Beanstalk dashboard
    env: "FactorialProjectDockerMultiContainer-env" # Copy it from Elastic Beanstalk dashboard
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket_name: "elasticbeanstalk-ap-south-1-611234080868" # Elastic Beanstalk will take code from S3 bucket and deploy it in container. Take it from AWS S3
    bucket_path: "docker" # Folder where Travis CI will upload the code in zip file in this folder. Take it from AWS S3
    on: 
        branch: master # Deploy only when there are changes on master branch
